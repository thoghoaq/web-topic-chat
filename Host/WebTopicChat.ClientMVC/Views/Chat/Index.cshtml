@model IEnumerable<Message>

@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@{
    var userId = HttpContextAccessor.HttpContext.Session.GetInt32("UserID");
}

@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>WebTopicChat.ClientMVC</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/topiccontent.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/WebTopicChat.ClientMVC.styles.css" asp-append-version="true" />
</head>
<body>
    <section class="gradient-custom">
        <div class=" py-5 px-5">
                <div class="row m-0 mt-1 mb-5 justify-content-center">
                    <div class="col-md-9 text-left">
                        <div class="topic text-white fw-bold">Topic: @ViewBag.TopicName</div>
                    </div>
                    <div class="col-md-3 text-end p-0">
                        <a href="/Topic/GetList" class="btn btn-light btn-lg btn-rounded w-auto">Back to Home</a>
                    </div>
                </div>
                <div class="col-md-12 col-lg-12 col-xl-12 scroll mb-0">
                    <ul class="list-unstyled text-white">
                        @foreach (var message in Model)
                        {
                            <li class="d-flex @GetChatAlignment(message.SenderId == userId) mb-4">
                            <div class="card mask-custom text-start @GetDecorMyChat(message.SenderId == userId)">
                                <div class="card-header d-flex justify-content-between align-items-center p-3"
                                         style="border-bottom: 1px solid rgba(255,255,255,.3);">
                                        <p class="fw-bold mb-0 pe-5">@message.SenderName</p>
                                        <p class="text-light small mb-0"><i class="far fa-clock"></i>@message.CreateTime</p>
                                    </div>
                                    <div class="card-body @TextAlignment(message.SenderId == userId)">
                                    <p class="mb-0 align-left">
                                            @message.Content
                                        </p>
                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
                <form action="/Chat/SendMessage" method="post">
                    <div class="row chat-box w-100 px-5 m-0 justify-content-between mb-2">
                        <div class="col-md-9 col-lg-9 col-xl-9 p-0">
                            <input type="hidden" name="topicIdParam" value="@ViewBag.TopicId">
                            <input type="hidden" name="topicNameParam" value="@ViewBag.TopicName">
                            <textarea class="form-control mt-3 mb-3 w-100" id="textAreaExample3" rows="4" name="message" placeholder="Type your message..."></textarea>
                        </div>
                        <div class="col-md-2 col-lg-2 col-xl-2 d-flex p-0 mt-0 justify-content-center align-items-center ">
                            <button type="submit" class="btn btn-light btn-lg btn-rounded w-100 h-50 text-center">Send</button>
                        </div>
                    </div>
                </form>
            </div>
    </section>
</body>
</html>

@functions {
    string GetChatAlignment(bool isMyChat)
    {
        return isMyChat ? "justify-content-end" : "justify-content-start";
    }

    string GetDecorMyChat (bool isMyChat)
    {
        return isMyChat ? "bg-custom" : "bg-normal";
    }

    string TextAlignment(bool isMyChat)
    {
        return isMyChat ? "text-end" : "text-start";
    }
}
<script>
    window.addEventListener('DOMContentLoaded', (event) => {
        var chatContainer = document.querySelector('.scroll');
        chatContainer.scrollTop = chatContainer.scrollHeight;
    });

    document.addEventListener('DOMContentLoaded', function () {
        var textarea = document.getElementById('textAreaExample3');

        textarea.addEventListener('keydown', function (event) {
            if (event.keyCode === 13 && !event.shiftKey) {
                event.preventDefault(); // Prevent new line
                document.forms[0].submit(); // Submit the form
            }
        });
    });
</script>